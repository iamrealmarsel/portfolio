@use '../../styles/helpers' as h;

$_duration: 0.3s;

.item {
  &:hover {
    z-index: 10;
  }
}

.preview {
  overflow: hidden;
  position: relative;
  transition: 0.1s transform;

  &:hover {
    z-index: 10;

    &:before {
      opacity: 1;
    }
  }
}

.overlay {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  display: flex;
  flex-direction: column;
  background-color: var(--color-yellow-alpha1);
  transform: translate3d(0, 100%, 0);
}

:global(.mobile) .overlay,
:global(.tablet) .overlay {
  transform: translate3d(0, 0, 0);
  background-color: transparent;
}

.imagePreview {
  cursor: pointer;
}

.linkPreview {
  display: block;
  width: 100%;
  flex-grow: 1;
  font-size: 0;
}

.info {
  display: flex;
  align-items: center;
  width: 100%;
  background-color: var(--color-yellow-alpha2);
}

.info_bottom {
  justify-content: flex-end;
}

.tags {
  padding: 10px;
  color: var(--color-primary-black);
  line-height: 24px;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.icons {
  display: flex;
  align-items: center;
}

.linkWebsite,
.linkGithub,
.linkDescription {
  box-sizing: content-box;
  padding: 10px;
  transition: background-color 0.15s;

  &:hover {
    background-color: var(--color-yellow);
  }

  img {
    width: auto;
    height: 24px;
  }
}

.overlay.inTop {
  animation: inTop $_duration forwards;
}

.overlay.inBottom {
  animation: inBottom $_duration forwards;
}

.overlay.inLeft {
  animation: inLeft $_duration forwards;
}

.overlay.inRight {
  animation: inRight $_duration forwards;
}

.overlay.outTop {
  animation: outTop $_duration forwards;
}

.overlay.outBottom {
  animation: outBottom $_duration forwards;
}

.overlay.outLeft {
  animation: outLeft $_duration forwards;
}

.overlay.outRight {
  animation: outRight $_duration forwards;
}

// ----- in -----

@keyframes inTop {
  0% {
    transform: translate3d(0, -100%, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inBottom {
  0% {
    transform: translate3d(0, 100%, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inLeft {
  0% {
    transform: translate3d(-100%, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes inRight {
  0% {
    transform: translate3d(100%, 0, 0);
  }
  100% {
    transform: translate3d(0, 0, 0);
  }
}

// ----- out -----

@keyframes outTop {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(0, -100%, 0);
  }
}

@keyframes outBottom {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(0, 100%, 0);
  }
}

@keyframes outLeft {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes outRight {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(100%, 0, 0);
  }
}

// ----- grid -----

@for $i from 1 through 3 {
  .item:nth-child(7n + #{$i}) {
    flex: 0 0 auto;
    width: 33.33%;
  }
}

@for $i from 4 through 7 {
  .item:nth-child(7n + #{$i}) {
    flex: 0 0 auto;
    width: 25%;
  }
}

@for $i from 1 through 2 {
  .item:nth-child(5n + #{$i}) {
    flex: 0 0 auto;

    @include h.media-bp-down(h.$md) {
      width: 50%;
    }

    @include h.media-bp-down(h.$xs) {
      width: 100%;
    }
  }
}

@for $i from 3 through 5 {
  .item:nth-child(5n + #{$i}) {
    flex: 0 0 auto;

    @include h.media-bp-down(h.$md) {
      width: 33.33%;
    }

    @include h.media-bp-down(h.$sm) {
      width: 50%;
    }

    @include h.media-bp-down(h.$xs) {
      width: 100%;
    }
  }
}
